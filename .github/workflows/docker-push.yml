name: Docker CI/CD with Layer Caching

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      # 1. 저장소 체크아웃
      - name: Checkout Repository
        uses: actions/checkout@v4

      # 2. JDK 17 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      # 3. mvnw 파일에 실행 권한 부여
      - name: Set execute permission for mvnw
        run: chmod +x mvnw

      # 4. Maven 빌드 (테스트 생략)
      - name: Maven Build
        run: ./mvnw clean package -DskipTests

      # 5. Docker Buildx 환경 설정
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 6. Docker Hub 로그인
      - name: Docker Hub Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 7. Docker 이미지 메타데이터 추출 (태그, 라벨 자동 설정)
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/booklog-app

      # 8. Docker 레이어 캐시 설정
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # 9. Docker 이미지 빌드 및 푸시 (캐시 활용)
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
